// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Games.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Blackjack\BlazorGames\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Blackjack\BlazorGames\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Blackjack\BlazorGames\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Blackjack\BlazorGames\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Blackjack\BlazorGames\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Blackjack\BlazorGames\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Blackjack\BlazorGames\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Blackjack\BlazorGames\_Imports.razor"
using Games;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Blackjack\BlazorGames\_Imports.razor"
using Games.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
using Games.Models.GameOfLife;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
using Games.Models.GameOfLife.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
using Games.Models.Common;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
using Games.Pages.Partials;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
using System.Security.Cryptography;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/gameoflife")]
    public partial class GameOfLife : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 9 "C:\Blackjack\BlazorGames\Pages\GameOfLife.razor"
       
    public int Rows { get; set; }
    public int Columns { get; set; }
    public bool RunSimulation { get; set; }
    public Theme Theme { get; set; }

    public Status[,] Grid { get; set; }

    public GameOfLife()
    {
        Rows = 20;
        Columns = 20;
        Grid = new Status[Rows, Columns];
    }

    public async Task Run()
    {
        RunSimulation = true;
        while (RunSimulation)
        {
            CalculateNextGeneration();
            StateHasChanged();
            await Task.Delay(1000);
        }
    }

    public void Stop()
    {
        RunSimulation = false;
    }

    public void SetTheme(ChangeEventArgs e)
    {
        Theme = (Theme)Enum.Parse(typeof(Theme), e.Value.ToString());
    }

    public void ChangeStatus(int row, int column)
    {
        Grid[row, column] = Grid[row, column] == Status.Dead ? Status.Alive : Status.Dead;
    }

    public void Randomize()
    {
        for (var row = 0; row < Rows; row++)
        {
            for (var column = 0; column < Columns; column++)
            {
                Grid[row, column] = (Status)RandomNumberGenerator.GetInt32(0, 2);
            }
        }
    }

    //Code for this method originally by Khalid Abuhakmeh.
    //https://khalidabuhakmeh.com/program-the-game-of-life-with-csharp-and-emojis
    public void CalculateNextGeneration()
    {
        var nextGeneration = new Status[Rows, Columns];

        // Loop through every cell 
        for (var row = 1; row < Rows - 1; row++)
        {
            for (var column = 1; column < Columns - 1; column++)
            {
                // find your alive neighbors
                var aliveNeighbors = 0;
                for (var i = -1; i <= 1; i++)
                {
                    for (var j = -1; j <= 1; j++)
                    {
                        aliveNeighbors += Grid[row + i, column + j] == Status.Alive ? 1 : 0;
                    }
                }

                var currentCell = Grid[row, column];

                // The cell needs to be subtracted 
                // from its neighbors as it was  
                // counted before 
                aliveNeighbors -= currentCell == Status.Alive ? 1 : 0;

                // Implementing the Rules of Life 

                // Cell is lonely and dies 
                if (currentCell == Status.Alive && aliveNeighbors < 2)
                {
                    nextGeneration[row, column] = Status.Dead;
                }

                // Cell dies due to over population 
                else if (currentCell == Status.Alive && aliveNeighbors > 3)
                {
                    nextGeneration[row, column] = Status.Dead;
                }

                // A new cell is born 
                else if (currentCell == Status.Dead && aliveNeighbors == 3)
                {
                    nextGeneration[row, column] = Status.Alive;
                }
                // All other cells stay the same
                else
                {
                    nextGeneration[row, column] = currentCell;
                }
            }
        }
        Grid = nextGeneration;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
