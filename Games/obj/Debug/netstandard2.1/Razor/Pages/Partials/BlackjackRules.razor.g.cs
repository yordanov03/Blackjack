#pragma checksum "C:\Games\Games\Pages\Partials\BlackjackRules.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cafa7658876a75bc18ca2cc70751eb7cc2371462"
// <auto-generated/>
#pragma warning disable 1591
namespace Games.Pages.Partials
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Games\Games\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Games\Games\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Games\Games\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Games\Games\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Games\Games\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Games\Games\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Games\Games\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Games\Games\_Imports.razor"
using Games;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Games\Games\_Imports.razor"
using Games.Shared;

#line default
#line hidden
#nullable disable
    public partial class BlackjackRules : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<hr>\n\n");
            __builder.AddMarkupContent(1, "<h2>Blackjack Rules</h2>\n\n");
            __builder.AddMarkupContent(2, "<p>\n    <a href=\"https://bicyclecards.com/how-to-play/blackjack/\">Blackjack</a> is a casino-style card game in which players\n    attempt to get card values as close to 21 as possible, without going over. It is played with a standard 52-card deck.\n</p>\n\n");
            __builder.AddMarkupContent(3, "<h4>Card Values</h4>\n");
            __builder.AddMarkupContent(4, "<p>Each card has a value, a number of points that it is worth.</p>\n");
            __builder.AddMarkupContent(5, @"<ul>
    <li>Each number card (2-9) is worth the number of points it shows.</li>
    <li>Tens, Jacks, Queens, and Kings are each worth ten points, and are collectively referred to as ""ten-cards"".</li>
    <li>An Ace is worth either 1 or 11 points.</li>
</ul>
");
            __builder.AddMarkupContent(6, "<p>\n    In the real world, an Ace is worth 1 or 11 points at the player\'s discretion.\n    In this simulation, Aces are automatically considered to be worth 11 points unless doing so makes the player go bust.\n</p>\n\n");
            __builder.AddMarkupContent(7, "<h2>Normal Gameplay</h2>\n\n");
            __builder.AddMarkupContent(8, "<h4>Betting</h4>\n");
            __builder.AddMarkupContent(9, "<p>\n    Before each hand, players must make a bet.\n    This bet will be lost if the players bust (go over 21) or end up with less points than the dealer.\n</p>\n\n");
            __builder.AddMarkupContent(10, "<h4>Getting Cards</h4>\n");
            __builder.AddMarkupContent(11, @"<p>
    After placing their bets, each player is dealt two cards face up. The dealer is dealt one card face down, and one card face up.
    At this point, each player may choose to either <strong>stand</strong> (decline to draw more cards) or <strong>hit</strong> (draw more cards, one at a time).
</p>

");
            __builder.AddMarkupContent(12, @"<p>
    If the player chooses to hit, they get another card face up from the dealer.
    If this card causes the player to bust, they lose their bet immediately.
    If the player does not bust, they can continue to hit, drawing one card each time, until they either bust or choose to stand.
</p>

");
            __builder.AddMarkupContent(13, "<p>Once all players chose to stand, the dealer takes their turn (see \"Dealer Behavior\"). Once their turn is complete, the dealer will calculate and give out payouts (see \"Payouts\").</p>\n\n");
            __builder.AddMarkupContent(14, "<h4>Going Bust</h4>\n");
            __builder.AddMarkupContent(15, "<p>\n    A player who has more than 21 points is said to have <strong>gone bust</strong>, or <strong>busted</strong>. For the player, this is an automatic loss, and they lose their bet.\n</p>\n\n");
            __builder.AddMarkupContent(16, "<h4>Naturals</h4>\n\n");
            __builder.AddMarkupContent(17, @"<p>
    Any player (including the dealer) who is dealt an Ace and a ten-card is said to have a <strong>natural</strong>, more commonly known as a <strong>blackjack</strong>.
    There are certain rules that determine what happens when either the player or the dealer, or both, have a natural:
</p>

");
            __builder.AddMarkupContent(18, @"<ul>
    <li>
        If the player has a natural and the dealer does not, the dealer pays them one-and-a-half the amount of their bet (so, if a player bet $20, they would keep the $20 bet AND receive an additional $30).
    </li>
    <li>
        If the dealer has a natural, any player who does not also have a natural immediately loses their bet. No players are allowed to hit in this situation.
    </li>
    <li>
        If both a player and the dealer have a natural, we have a push; the player does not lose their bet, but does not gain any additional money.
    </li>
</ul>

");
            __builder.AddMarkupContent(19, "<h4>Dealer Behavior</h4>\n\n");
            __builder.AddMarkupContent(20, "<p>\n    The dealer\'s turn will always come after every player has had their turn.\n</p>\n\n");
            __builder.AddMarkupContent(21, "<p>\n    On the dealer\'s turn, they flip over their \"hidden\" card, and are compelled to \"hit\" as long as their score is 16 or less, or they have busted.\n    If their total is 17 or greater without busting, the dealer will stand.\n</p>\n\n");
            __builder.AddMarkupContent(22, "<h4>Payouts</h4>\n\n");
            __builder.AddMarkupContent(23, "<p>Once the dealer\'s turn is complete, they will calculate which bets have won and which have not, according to these rules:</p>\n\n");
            __builder.AddMarkupContent(24, @"<ul>
    <li>If the player has a natural and the dealer does not, the player gets one-and-a-half again the value of their bet (a bet of $20 means the player keeps their original $20 and gets an additional $30).</li>
    <li>If the dealer has a natural, the player has gone bust, or the player has less points than the dealer and neither have gone bust, the player loses their bet.</li>
    <li>If the player has more points than the dealer, or the dealer has gone bust, they win the hand (a bet of $20 and a winning hand means the player keeps their original $20 and gets an additional $20).</li>
    <li>If neither the players nor the dealer have gone bust and they have the same number of points, we have a <strong>push</strong>; the players keep their bets, but receive no additional money.</li>
</ul>

");
            __builder.AddMarkupContent(25, "<h2>Special Plays</h2>\n\n");
            __builder.OpenElement(26, "p");
            __builder.AddMarkupContent(27, "\n    In addition to the normal gameplay of Blackjack, there are a few special plays that can be made by the player under certain circumstances.\n    When one of these plays can be made, they will show up as a ");
            __builder.OpenElement(28, "button");
            __builder.AddEventPreventDefaultAttribute(29, "onclick", true);
            __builder.AddAttribute(30, "class", "btn btn-warning");
            __builder.AddContent(31, "yellow button");
            __builder.CloseElement();
            __builder.AddMarkupContent(32, ".\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(33, "\n\n");
            __builder.AddMarkupContent(34, "<h4>Doubling Down</h4>\n\n");
            __builder.AddMarkupContent(35, @"<p>
    If the player has a score of 9, 10, or 11 in their initial two cards, they can choose to ""double down"". 
    Doing this means they double their bet, and will receive one additional card.
    The player is forced to stand after receiving this card (they cannot draw further cards).
</p>

");
            __builder.AddMarkupContent(36, @"<p>
    The dealer will then take their turn, and gameplay proceeds as normal. 
    If they player wins the hand, they receive back their doubled bet, plus the doubled bet again. 
    In this way, an original bet of $20 results in a $40 bet if doubled down, and the player will receive the $40 bet plus an additional $40 if they win the hand.
</p>

");
            __builder.AddMarkupContent(37, "<p>If the player loses the hand, they lose their doubled bet (an original bet of $20, doubled down, means the player will lose $40).</p>\n\n");
            __builder.AddMarkupContent(38, "<p>\n    The dealer does not have the option to double down.\n</p>\n\n");
            __builder.AddMarkupContent(39, "<h4>Insurance</h4>\n\n");
            __builder.AddMarkupContent(40, @"<p>
    If the dealer has an Ace showing, the player may choose to make an <strong>insurance bet</strong>.
    In the real world, this bet may be anything up to half of the original bet. 
    In this simulation, the insurance bet will always be half of the original bet.
</p>

");
            __builder.AddMarkupContent(41, @"<p>
    If a player makes an insurance bet, the dealer looks at his hidden card. 
    If it is a ten-card, then the dealer pays the player at two-to-one of the insurance bet.
    So, if the original bet is $50, the insurance bet is $25. If the dealer has a hidden ten-card, the payout to the player is $25 * 2 = $50.
</p>

");
            __builder.AddMarkupContent(42, "<p>\n    After processing the insurance bet, if the dealer has a ten card, they have a blackjack and the hand is over.\n    Regular bets are processed normally.\n</p>\n\n");
            __builder.AddMarkupContent(43, "<p>\n    If the dealer does NOT have a ten-card hidden, the player loses their insurance bet and play continues as normal.\n</p>\n\n");
            __builder.AddMarkupContent(44, "<p>\n    In this way, the player is protected from the dealer having blackjack; if the dealer has blackjack and the player does not, \n    the insurance bet covers the loss of the regular bet.\n</p>");
        }
        #pragma warning restore 1998
    }
}
#pragma warning restore 1591
